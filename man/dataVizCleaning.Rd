% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataVizCleaning.R
\name{dataVizCleaning}
\alias{dataVizCleaning}
\title{Creates a data frame that is a summary table of counts and percentages}
\usage{
dataVizCleaning(df, scale_labels, pre_post = TRUE, na_remove = TRUE)
}
\arguments{
\item{df}{Required, A \link[tibble:tibble-package]{tibble}/data frame of survey items that are categorical/character
variables.}

\item{scale_labels}{Required, a character vector of labels for the response scale, must be in the desired order,
e.g. if you have a 5 item scale of minimal to extensive it should look like this:
\code{levels_min_ext <- c("Minimal", "Slight", "Moderate", "Good", "Extensive")}.}

\item{pre_post}{Logical, default is FALSE. If true, returns a \link[tibble:tibble-package]{tibble} with an additional column of \code{timing}
that is a factor variable of either \code{Pre} or \code{Post}.}

\item{na_remove}{Logical, defaults to TRUE. If TRUE, Drops NA values; if FALSE, turns NA's into "Missing" and adds it as a factor
in the first position of \code{scale_labels}.}
}
\value{
A \link[tibble:tibble-package]{tibble} with the data in 5 columns: \code{question}, \code{response}, \code{n_answers}, \code{percent_answers} and \code{percent_answers_label.}
\code{question} is the name of the original item, \code{response} is all of the categorical responses possible for the item. \code{n_answers} is the count of each response,
\code{percent_answers} is the percentage of each response and \code{percent_answers_label} is a character variable of percentage labelled with percent sign for use as
text label. If \code{pre_post} arg is TRUE, an column of \code{timing} is added that is a factor variable of either \code{Pre} or \code{Post}.
}
\description{
Creates a data frame that is a summary table of counts and percentages
}
\examples{
# Fake data for examples, first are single items and the second has pre-post data with correct prefixes in variable names:
items_single <- tibble::tibble(
    Organization = c("Minimal", "Slight", "Moderate", "Good", "Extensive", "Good", "Moderate", "Slight", "Minimal"),
    Source = c("Slight", "Slight", "Moderate", "Extensive", "Good", "Moderate", "Slight", "Minimal", "Slight"),
    Publish = c("Minimal", "Minimal", "Minimal", "Slight", "Slight", "Slight", "Moderate", "Moderate", "Moderate"),
    Write = c("Slight", "Slight", "Slight", "Moderate", "Moderate", "Moderate", "Good", "Good", "Good"),
    Research = c("Minimal", "Minimal", "Slight", "Slight", "Moderate", "Moderate", "Good", "Good", "Good")
)

items_pre_post <- tibble::tibble(
    pre_Organization = c("Minimal", "Slight", "Moderate", "Good", "Extensive", "Good", "Moderate", "Slight", "Minimal"),
    post_Organization = c("Slight", "Moderate", "Good", "Extensive", "Extensive", "Extensive", "Good", "Moderate", "Slight"),
    pre_Source = c("Slight", "Slight", "Moderate", "Extensive", "Good", "Moderate", "Slight", "Minimal", "Slight"),
    post_Source = c("Good", "Good", "Extensive", "Extensive", "Good", "Extensive", "Good", "Moderate", "Good"),
    pre_Publish = c("Minimal", "Minimal", "Minimal", "Slight", "Slight", "Slight", "Moderate", "Moderate", "Moderate"),
    post_Publish = c("Moderate", "Moderate", "Moderate", "Good", "Good", "Good", "Extensive", "Extensive", "Extensive"),
    pre_Write = c("Slight", "Slight", "Slight", "Moderate", "Moderate", "Moderate", "Good", "Good", "Good"),
    post_Write = c("Moderate", "Moderate", "Moderate", "Good", "Good", "Good", "Extensive", "Extensive", "Extensive"),
    pre_Research = c("Minimal", "Minimal", "Slight", "Slight", "Moderate", "Moderate", "Good", "Good", "Good"),
    post_Research = c("Slight", "Slight", "Moderate", "Moderate", "Good", "Good", "Extensive", "Extensive", "Extensive")
)
# Add a row of NA values to each fake data set:
items_pre_post_na <- dplyr::rows_append(items_pre_post,
                                        tibble::as_tibble_row(purrr::set_names(rep(NA, NCOL(items_pre_post)), names(items_pre_post))))
items_single_na <- dplyr::rows_append(items_single,
                                      tibble::as_tibble_row(purrr::set_names(rep(NA, NCOL(items_single)), names(items_single))))

# Likert scale to pass to `scale_labels` that is the order to arrange each variable:
levels_min_ext <- c("Minimal", "Slight", "Moderate", "Good", "Extensive")

dataVizCleaning(df = items_single, pre_post = FALSE, scale_labels = levels_min_ext, na_remove = TRUE)
dataVizCleaning(df = items_single_na, pre_post = FALSE, scale_labels = levels_min_ext, na_remove = FALSE)
dataVizCleaning(df = items_pre_post, pre_post = TRUE, scale_labels = levels_min_ext, na_remove = TRUE)
dataVizCleaning(df = items_pre_post_na, pre_post = TRUE, scale_labels = levels_min_ext, na_remove = FALSE)
}
